{"version":3,"sources":["components/Pagination/Pagination.module.scss","components/Table/TableHead.module.scss","assets/icons/sort-down.svg","components/Table/TableBody.module.scss","components/SearchBar/SearchBar.module.scss","components/HeadingBar/HeadingBar.module.scss","components/Table/Table.module.scss","assets/icons/sort-up.svg","components/ErrorModal/ErrorModal.module.scss","assets/icons/left-arrow.svg","assets/icons/right-arrow.svg","components/Select/Select.module.scss","components/LoadingModal/LoadingModal.module.scss","components/SearchBar/SearchBar.js","components/HeadingBar/HeadingBar.js","assets/tableColumns.js","components/Table/TableHead.js","utils/accountingFormat.js","components/Table/TableBody.js","components/ErrorModal/ErrorModal.js","components/Table/Table.js","components/Select/Select.js","components/Pagination/Pagination.js","components/LoadingModal/LoadingModal.js","utils/handleIncomes.js","utils/progressUpdate.js","components/App.js","index.js"],"names":["module","exports","SearchBar","searchedItem","setSearchedItem","className","styles","input","type","placeholder","value","onChange","e","target","HeadingBar","wraper","tableColumns","name","columnKey","TableHead","allCompanies","setter","setCurrentPage","useState","lastSortedColumn","setLastSortedColumn","isASC","setIsASC","thead","map","column","i","key","onClick","reverse","sort","a","b","touched","src","sortDown","sortUp","alt","accountingFormat","number","Intl","NumberFormat","minimumFractionDigits","format","TableBody","companiesPerPage","itemsPerPage","error","tbody","filter","company","isElementPresent","toString","toLowerCase","includes","el","id","city","totalIncome","avgIncome","lastMonthIncome","length","Array","fill","fillers","ErrorModal","condition","Table","setAllCompanies","selectOptions","label","Select","setItemsPerPage","select","Pagination","currentPage","recordsAmount","allPaginationPages","Math","ceil","handleClick","leftArrow","disabled","rightArrow","LoadingModal","text","color","height","width","handleIncomes","data","incomes","date","reduce","prev","cur","toFixed","lastMonthIncomeArray","lastIncomeMonth","slice","income","push","progressUpdate","fetchedCompanies","fetchedCompaniesWithIncomes","App","setError","isLoading","setIsLoading","progress","setProgress","useEffect","fetchIncomes","fetch","then","response","json","catch","indexOfLastRecord","indexOfFirstRecord","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6f6fc9f4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wraper\":\"Pagination_wraper__3jSyy\",\"disabled\":\"Pagination_disabled__1i9Fy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"thead\":\"TableHead_thead__3oUck\",\"touched\":\"TableHead_touched__3yP6V\"};","module.exports = __webpack_public_path__ + \"static/media/sort-down.ca82bc74.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tbody\":\"TableBody_tbody__1iThr\",\"fillers\":\"TableBody_fillers__37e_r\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"SearchBar_input__vrkGr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wraper\":\"HeadingBar_wraper__3lKhB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wraper\":\"Table_wraper__19BIv\"};","module.exports = __webpack_public_path__ + \"static/media/sort-up.3a5f2344.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wraper\":\"ErrorModal_wraper__16zXA\"};","module.exports = __webpack_public_path__ + \"static/media/left-arrow.6c9efe0c.svg\";","module.exports = __webpack_public_path__ + \"static/media/right-arrow.be237328.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"select\":\"Select_select__1GDve\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wraper\":\"LoadingModal_wraper__3D1jc\"};","import React from 'react';\r\nimport styles from './SearchBar.module.scss';\r\n\r\nconst SearchBar = ({searchedItem, setSearchedItem}) => {\r\n  const handleChange = (e) => {\r\n    setSearchedItem(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <input\r\n        className={styles.input}\r\n        type=\"text\"\r\n        placeholder=\"Search...\"\r\n        value={searchedItem}\r\n        onChange={handleChange}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchBar;\r\n","import React from 'react';\r\nimport SearchBar from '../SearchBar/SearchBar';\r\nimport styles from './HeadingBar.module.scss';\r\n\r\nconst HeadingBar = ({searchedItem, setSearchedItem}) => {\r\n  return (\r\n    <section className={styles.wraper}>\r\n      <h1>Companies incomes</h1>\r\n      <SearchBar\r\n        searchedItem={searchedItem}\r\n        setSearchedItem={setSearchedItem}\r\n      />\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default HeadingBar;\r\n","const tableColumns = [\r\n  {name: 'Id', columnKey: 'id'},\r\n  {name: 'Name', columnKey: 'name'},\r\n  {name: 'City', columnKey: 'city'},\r\n  {name: 'Total income', columnKey: 'totalIncome'},\r\n  {name: 'Avg Income', columnKey: 'avgIncome'},\r\n  {name: 'Last month income', columnKey: 'lastMonthIncome'},\r\n];\r\n\r\nexport default tableColumns;\r\n","import React from 'react';\r\nimport {useState} from 'react';\r\nimport styles from './TableHead.module.scss';\r\nimport tableColumns from '../../assets/tableColumns';\r\nimport sortDown from '../../assets/icons/sort-down.svg';\r\nimport sortUp from '../../assets/icons/sort-up.svg';\r\n\r\nconst TableHead = ({allCompanies, setter, setCurrentPage}) => {\r\n  const [lastSortedColumn, setLastSortedColumn] = useState(null);\r\n  const [isASC, setIsASC] = useState(true);\r\n\r\n  const handleClick = (columnKey) => {\r\n    //click on the same column\r\n    if (lastSortedColumn === columnKey) {\r\n      setIsASC(!isASC);\r\n      setter([...allCompanies.reverse()]);\r\n    }\r\n    //click on new column\r\n    else {\r\n      setIsASC(true);\r\n      setter([\r\n        ...allCompanies.sort((a, b) => {\r\n          //this sort works only if numeric values in array are typeof 'number'\r\n          if (a[columnKey] > b[columnKey]) return 1;\r\n          if (b[columnKey] > a[columnKey]) return -1;\r\n          return 0;\r\n        }),\r\n      ]);\r\n    }\r\n\r\n    setCurrentPage(1);\r\n    setLastSortedColumn(columnKey);\r\n  };\r\n\r\n  return (\r\n    <thead className={styles.thead}>\r\n      <tr>\r\n        {tableColumns.map((column, i) => (\r\n          <td key={i} onClick={() => handleClick(column.columnKey)}>\r\n            <div>\r\n              <img\r\n                className={\r\n                  lastSortedColumn === column.columnKey ? styles.touched : null\r\n                }\r\n                src={\r\n                  lastSortedColumn === column.columnKey\r\n                    ? isASC\r\n                      ? sortDown\r\n                      : sortUp\r\n                    : sortDown\r\n                }\r\n                alt=\"sort-icon\"\r\n              />\r\n              <span>{column.name}</span>\r\n            </div>\r\n          </td>\r\n        ))}\r\n      </tr>\r\n    </thead>\r\n  );\r\n};\r\n\r\nexport default TableHead;\r\n","const accountingFormat = (number) =>\r\n  number\r\n    ? new Intl.NumberFormat('en-US', {\r\n        minimumFractionDigits: 2,\r\n      }).format(number)\r\n    : null;\r\n\r\nexport default accountingFormat;\r\n","import React from 'react';\r\nimport styles from './TableBody.module.scss';\r\nimport tableColumns from '../../assets/tableColumns';\r\nimport accountingFormat from '../../utils/accountingFormat';\r\n\r\nconst TableBody = ({companiesPerPage, searchedItem, itemsPerPage, error}) => {\r\n  return (\r\n    <tbody className={styles.tbody}>\r\n      {companiesPerPage &&\r\n        companiesPerPage\r\n          .filter((company) => {\r\n            let isElementPresent = false;\r\n            for (const i of tableColumns) {\r\n              if (\r\n                company[i.columnKey]\r\n                  .toString()\r\n                  .toLowerCase()\r\n                  .includes(searchedItem.toLowerCase())\r\n              ) {\r\n                isElementPresent = true;\r\n                break; //if element is present in a row , check next one\r\n              }\r\n            }\r\n            return isElementPresent;\r\n          })\r\n          .map((el, i) => (\r\n            <tr key={el.id}>\r\n              <td>{el.id}</td>\r\n              <td>{el.name}</td>\r\n              <td>{el.city}</td>\r\n              <td>{accountingFormat(el.totalIncome)}</td>\r\n              <td>{accountingFormat(el.avgIncome)}</td>\r\n              <td>{accountingFormat(el.lastMonthIncome)}</td>\r\n            </tr>\r\n          ))}\r\n      {itemsPerPage > companiesPerPage.length &&\r\n        new Array(itemsPerPage - companiesPerPage.length)\r\n          .fill(1)\r\n          .map((el, i) => <tr className={styles.fillers} key={-i}></tr>)}\r\n    </tbody>\r\n  );\r\n};\r\n\r\nexport default TableBody;\r\n","import React from 'react';\r\nimport styles from './ErrorModal.module.scss';\r\n\r\nconst ErrorModal = ({condition}) => {\r\n  return condition ? (\r\n    <div className={styles.wraper}>\r\n      <p>Sorry, an error occurred. Please try again later.</p>\r\n    </div>\r\n  ) : null;\r\n};\r\n\r\nexport default ErrorModal;\r\n","import React from 'react';\r\nimport styles from './Table.module.scss';\r\nimport TableHead from './TableHead';\r\nimport TableBody from './TableBody';\r\nimport ErrorModal from '../ErrorModal/ErrorModal';\r\n\r\nconst Table = ({\r\n  allCompanies,\r\n  companiesPerPage,\r\n  setAllCompanies,\r\n  searchedItem,\r\n  itemsPerPage,\r\n  setCurrentPage,\r\n  error,\r\n}) => {\r\n  return (\r\n    <div className={styles.wraper}>\r\n      <table>\r\n        <TableHead\r\n          allCompanies={allCompanies}\r\n          setter={setAllCompanies}\r\n          setCurrentPage={setCurrentPage}\r\n        />\r\n\r\n        <TableBody\r\n          companiesPerPage={companiesPerPage}\r\n          searchedItem={searchedItem}\r\n          itemsPerPage={itemsPerPage}\r\n          error={error}\r\n        />\r\n      </table>\r\n      <ErrorModal condition={error} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Table;\r\n","import React from 'react';\r\nimport styles from './Select.module.scss';\r\n\r\nconst Select = ({setItemsPerPage, setCurrentPage}) => {\r\n  return (\r\n    <select\r\n      className={styles.select}\r\n      onChange={(e) => {\r\n        setCurrentPage(1);\r\n        setItemsPerPage(e.target.value);\r\n      }}\r\n    >\r\n      {selectOptions.map((el, i) => (\r\n        <option key={i} value={el.value}>\r\n          {el.label}\r\n        </option>\r\n      ))}\r\n    </select>\r\n  );\r\n};\r\n\r\nconst selectOptions = [\r\n  {value: 10, label: '10'},\r\n  {value: 25, label: '25'},\r\n  {value: 50, label: '50'},\r\n  {value: 100, label: '100'},\r\n];\r\n\r\nexport default Select;\r\n","import React from 'react';\r\nimport styles from './Pagination.module.scss';\r\nimport leftArrow from '../../assets/icons/left-arrow.svg';\r\nimport rightArrow from '../../assets/icons/right-arrow.svg';\r\nimport Select from '../Select/Select';\r\n\r\nconst Pagination = ({\r\n  itemsPerPage,\r\n  setItemsPerPage,\r\n  currentPage,\r\n  setCurrentPage,\r\n  recordsAmount,\r\n}) => {\r\n  const allPaginationPages = Math.ceil(recordsAmount / itemsPerPage);\r\n  const handleClick = (e) => {\r\n    if (e.target.alt === 'right-arrow') setCurrentPage(currentPage + 1);\r\n    else setCurrentPage(currentPage - 1);\r\n  };\r\n\r\n  return (\r\n    <section className={styles.wraper}>\r\n      <div>\r\n        <p>Items per page:</p>\r\n        <Select\r\n          setItemsPerPage={setItemsPerPage}\r\n          setCurrentPage={setCurrentPage}\r\n        />\r\n      </div>\r\n\r\n      <div>\r\n        <p>\r\n          Page: {currentPage} of {allPaginationPages}\r\n        </p>\r\n        <img\r\n          src={leftArrow}\r\n          alt=\"left-arrow\"\r\n          onClick={currentPage < 2 ? null : handleClick}\r\n          className={currentPage < 2 ? styles.disabled : null}\r\n        />\r\n        <img\r\n          src={rightArrow}\r\n          alt=\"right-arrow\"\r\n          onClick={currentPage === allPaginationPages ? null : handleClick}\r\n          className={\r\n            currentPage === allPaginationPages ? styles.disabled : null\r\n          }\r\n        />\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Pagination;\r\n","import React from 'react';\r\nimport styles from './LoadingModal.module.scss';\r\nimport Loader from 'react-loader-spinner';\r\n\r\nconst LoadingModal = ({condition, text}) => {\r\n  return condition ? (\r\n    <div className={styles.wraper}>\r\n      <Loader\r\n        type=\"Oval\"\r\n        color=\"#005CA9\"\r\n        height={50}\r\n        width={50}\r\n        // timeout={3000} // [sec]\r\n      />\r\n      <p>{text}</p>\r\n    </div>\r\n  ) : null;\r\n};\r\n\r\nexport default LoadingModal;\r\n","const handleIncomes = (data) => {\r\n  const incomes = data.incomes.sort((a, b) => {\r\n    //descending sorting\r\n    if (a.date > b.date) return -1;\r\n    if (b.date > a.date) return 1;\r\n    return 0;\r\n  });\r\n\r\n  const totalIncome = +incomes\r\n    .reduce((prev, cur, i) =>\r\n      i === 1 ? +prev.value + +cur.value : prev + +cur.value\r\n    )\r\n    .toFixed(2);\r\n\r\n  const avgIncome = +(totalIncome / incomes.length).toFixed(2);\r\n\r\n  const lastMonthIncomeArray = [];\r\n  const lastIncomeMonth = incomes[0].date.slice(0, 7);\r\n\r\n  //filter last month incomes\r\n  for (const income of incomes) {\r\n    if (income.date.slice(0, 7) < lastIncomeMonth) break;\r\n    else lastMonthIncomeArray.push(income);\r\n  }\r\n\r\n  const lastMonthIncome = +lastMonthIncomeArray\r\n    .map((income) => +income.value)\r\n    .reduce((prev, cur) => prev + cur)\r\n    .toFixed(2);\r\n\r\n  return [totalIncome, avgIncome, lastMonthIncome];\r\n};\r\n\r\nexport default handleIncomes;\r\n","const progressUpdate = (\r\n  fetchedCompanies,\r\n  fetchedCompaniesWithIncomes,\r\n  setter\r\n) => {\r\n  if (\r\n    fetchedCompaniesWithIncomes.length %\r\n      (fetchedCompanies.length / 100).toFixed() ===\r\n    0\r\n  ) {\r\n    return setter(\r\n      (\r\n        (fetchedCompaniesWithIncomes.length / fetchedCompanies.length) *\r\n        100\r\n      ).toFixed()\r\n    );\r\n  }\r\n};\r\n\r\nexport default progressUpdate;\r\n","import React, {useState, useEffect} from 'react';\nimport '../styles/global.scss';\nimport HeadingBar from './HeadingBar/HeadingBar';\nimport Table from './Table/Table';\nimport Pagination from './Pagination/Pagination';\nimport LoadingModal from './LoadingModal/LoadingModal';\nimport handleIncomes from '../utils/handleIncomes';\nimport progressUpdate from '../utils/progressUpdate';\n\nfunction App() {\n  const [allCompanies, setAllCompanies] = useState([]);\n  const [searchedItem, setSearchedItem] = useState('');\n  const [itemsPerPage, setItemsPerPage] = useState(10);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [error, setError] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [progress, setProgress] = useState(0);\n\n  //fetch all companies and then their income details\n  useEffect(() => {\n    const fetchedCompanies = [];\n    const fetchedCompaniesWithIncomes = [];\n\n    const fetchCompanies = () => {\n      setIsLoading(true);\n      fetch('https://recruitment.hal.skygate.io/companies')\n        .then((response) => {\n          return response.json();\n        })\n        .then((data) => {\n          fetchedCompanies.push(...data.sort((a, b) => a.id - b.id));\n          setAllCompanies(fetchedCompanies.slice(0, itemsPerPage));\n          fetchIncomes();\n        })\n        .catch(() => {\n          setError(true);\n          setIsLoading(false);\n        });\n    };\n\n    const fetchIncomes = async () => {\n      setIsLoading(true);\n      for (const company of fetchedCompanies) {\n        await fetch(`https://recruitment.hal.skygate.io/incomes/${company.id}`)\n          .then((response) => {\n            return response.json();\n          })\n          .then((data) => {\n            const [totalIncome, avgIncome, lastMonthIncome] = handleIncomes(\n              data\n            );\n\n            fetchedCompaniesWithIncomes.push({\n              ...company,\n              totalIncome,\n              avgIncome,\n              lastMonthIncome,\n            });\n\n            progressUpdate(\n              fetchedCompanies,\n              fetchedCompaniesWithIncomes,\n              setProgress\n            );\n          })\n          .catch(() => {\n            setError(true);\n            setIsLoading(false);\n          });\n\n        //load first page\n        if (fetchedCompaniesWithIncomes.length === itemsPerPage) {\n          setAllCompanies(fetchedCompaniesWithIncomes);\n        }\n      }\n      setAllCompanies(fetchedCompaniesWithIncomes);\n      setIsLoading(false);\n    };\n    fetchCompanies();\n  }, []);\n\n  //companies per page calculation\n  const indexOfLastRecord = itemsPerPage * currentPage;\n  const indexOfFirstRecord = indexOfLastRecord - itemsPerPage;\n  const companiesPerPage = allCompanies.slice(\n    indexOfFirstRecord,\n    indexOfLastRecord\n  );\n\n  return (\n    <div className=\"App\">\n      <div className=\"wraper\">\n        <HeadingBar\n          searchedItem={searchedItem}\n          setSearchedItem={setSearchedItem}\n        />\n\n        <Table\n          allCompanies={allCompanies}\n          companiesPerPage={companiesPerPage}\n          setAllCompanies={setAllCompanies}\n          searchedItem={searchedItem}\n          itemsPerPage={itemsPerPage}\n          setCurrentPage={setCurrentPage}\n          error={error}\n        />\n\n        <Pagination\n          itemsPerPage={itemsPerPage}\n          setItemsPerPage={setItemsPerPage}\n          currentPage={currentPage}\n          setCurrentPage={setCurrentPage}\n          recordsAmount={allCompanies.length}\n        />\n\n        <LoadingModal\n          condition={isLoading}\n          text={`Loading data... ${progress}%`}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}